name: Check then Build

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: cache rust
        uses: Swatinem/rust-cache@v2

      - name: check fmt
        run: cargo fmt --all --check
      - name: check clippy
        run: cargo clippy --no-deps -- -D warnings
      - name: check build
        run: cargo build --release
      - name: check test
        run: cargo test --release

  changelog:
    name: Changelog Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v3
      - uses: Zomzog/changelog-checker@v1.3.0
        with:
          fileName: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        impl: [poem-openapi, axum]

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: duskmoon/httpbin-rs
          flavor: |
            suffix=-${{ matrix.impl }},onlatest=true
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=edge,branch=main

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          build-args: |
            HTTPBIN_IMPL=httpbin-${{ matrix.impl }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=duskmoon/httpbin-rs:${{ steps.meta.outputs.tags }}
          cache-to: type=inline
